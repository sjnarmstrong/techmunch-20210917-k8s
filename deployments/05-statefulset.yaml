# StatefulSet is the workload API object used to manage stateful applications.

# Manages the deployment and scaling of a set of Pods, and provides guarantees about the ordering and uniqueness of these Pods.

# Like a Deployment, a StatefulSet manages Pods that are based on an identical container spec. Unlike a Deployment, a StatefulSet maintains a sticky identity for each of their Pods. These pods are created from the same spec, but are not interchangeable: each has a persistent identifier that it maintains across any rescheduling.

# If you want to use storage volumes to provide persistence for your workload, you can use a StatefulSet as part of the solution. Although individual Pods in a StatefulSet are susceptible to failure, the persistent Pod identifiers make it easier to match existing volumes to the new Pods that replace any that have failed.
# kubectl apply -f deployments/05-statefulset.yaml
# kubectl delete -f deployments/05-statefulset.yaml

apiVersion: v1
kind: Service
metadata:
  name: techmunch-headless
  labels:
    app: techmunch-headless
spec:
  # ports:
  # - port: 8888
  #   name: http
  clusterIP: None
  selector:
    app: techmunch
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: techmunch
spec:
  selector:
    matchLabels:
      app: techmunch
  serviceName: techmunch-headless
  replicas: 3 
  template:
    metadata:
      labels:
        app: techmunch 
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: techmunch
          image: sjnarmstrong/techmunch-sholto:20210717
          imagePullPolicy: Always
          ports:
            - containerPort: 8888
              protocol: TCP
              name: http
          resources:
            requests:
              memory: "500Mi"
              cpu: "1000m"
            limits:
              memory: "500Mi"
              cpu: "1000m"